var searchIndex = new Map(JSON.parse('[["Arcella",{"t":"FCNNNNCCNNCNNNCNNNNNNNCHCCCNNNNNFNNNNNNNNNOCCNOHNNNGFPPPNNNNNNNONNNNNNNNNNNNNNNNNONNONNNNNNNJJHHHHFNNNNNNNNNNNNFONNOONNNNNNNNNNNNHOONNNNPIGPPPPPPPPPPPPPPIPPPPNNNNNNNNNNNNNNNNNNNNFFFNNNNNNOONNNNNNNNNONNNNNNNNNNOONOOONONNNNNNNNNNOFONNOONNNNNNNONNNN","n":["Cli","alme","augment_args","augment_args_for_update","borrow","borrow_mut","cache","cli","command","command_for_update","config","deref","deref_mut","drop","error","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","log","main","manifest","runtime","storage","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","AlmeServerHandle","borrow","borrow_mut","deref","deref_mut","drop","","from","init","into","join_handle","protocol","server","shutdown","shutdown_tx","start","try_from","try_into","type_id","AlmeRequest","AlmeResponse","ListModules","Ping","Status","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","data","deref","","deref_mut","","deserialize","","drop","","error","fmt","","from","","init","","into","","message","serialize","","success","to_owned","try_from","","try_into","","type_id","","MAX_READER_TIMEOUT","MAX_REQUEST_LENGTH","handle_connection","run_server_loop","send_response","spawn_server","ModuleCache","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","ArcellaConfig","base_dir","borrow","borrow_mut","cache_dir","cfg_dir","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","load","modules_dir","socket_path","to_owned","try_from","try_into","type_id","Alme","AnyResult","ArcellaError","Config","Err","","HomeDirNotFound","Instance","Internal","InvalidRequest","Io","Join","Json","Manifest","ModuleNotFound","Ok","","Result","RuntimeError","Serialization","Wasmtime","Wat","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","","","","","","init","into","source","to_string","try_from","try_into","type_id","ArcellaRuntime","ArcellaRuntimeEnvironment","ArcellaRuntimeStatus","borrow","","","borrow_mut","","","cache","config","deref","","","deref_mut","","","drop","","","environment","from","","","init","","","into","","","new","pid","","shutdown","start_instant","start_system","start_time","status","storage","try_from","","","try_into","","","type_id","","","uptime","","StorageManager","base_dir","borrow","borrow_mut","cache_dir","cfg_dir","deref","deref_mut","drop","ensure_directories","from","init","into","modules_dir","new","try_from","try_into","type_id"],"q":[[0,"Arcella"],[32,"Arcella::alme"],[51,"Arcella::alme::protocol"],[92,"Arcella::alme::server"],[98,"Arcella::cache"],[111,"Arcella::config"],[136,"Arcella::error"],[178,"Arcella::runtime"],[228,"Arcella::storage"],[246,"clap_builder::builder::command"],[247,"core::fmt"],[248,"clap_builder::parser::matches::arg_matches"],[249,"clap_builder"],[250,"core::result"],[251,"clap_builder::util::id"],[252,"core::option"],[253,"core::any"],[254,"tokio::sync::rwlock"],[255,"alloc::sync"],[256,"serde_core::de"],[257,"alloc::string"],[258,"serde_core::ser"],[259,"tokio::net::unix::stream"],[260,"tokio::sync::broadcast"],[261,"tokio::net::unix::listener"],[262,"tokio::io::split"],[263,"std::path"],[264,"std::io::error"],[265,"anyhow"],[266,"wat"],[267,"serde_json::error"],[268,"tokio::runtime::task::error"],[269,"core::error"],[270,"std::time"],[271,"core::time"]],"i":"``l000``00`000`0000000`````00000`B`000000000``00`000``Bh000Bl1011101010101001010101001001101010```````Df00000000000`Dd0000000000000000`000000Al``0FbFd22222222210`222222222222222222222222```EfEjBb21000210210210021021021002102210021021021001`Ed0000000000000000","f":"``{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}``{{}b}0`{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}`{{{d{l}}{d{fn}}}A`}{cc{}}{{{d{Ab}}}{{Af{lAd}}}}{{{d{fAb}}}{{Af{lAd}}}}{{}{{Aj{Ah}}}}{{}h}{{}c{}}`{{}{{Af{jAl}}}}```{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}{{{d{fl}}{d{Ab}}}{{Af{jAd}}}}{{{d{fl}}{d{fAb}}}{{Af{jAd}}}}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{h{{d{c}}}{}}{h{{d{fc}}}{}}{{{d{fB`}}}j}{hj}{cc{}}>={B`Aj}``{B`{{Af{jAl}}}}1{{{Bf{{Bd{Bb}}}}}{{Af{B`Al}}}}>=<`````9988{{{d{Bh}}}Bh}{{d{d{fc}}}j{}}{{dBj}j}{BlAj};;::{c{{Af{Bh}}}Bn}{c{{Af{Bl}}}Bn}::{{{d{C`}}}Bl}{{{d{Bh}}{d{fn}}}A`}{{{d{Bl}}{d{fn}}}A`}<<{{}h}0{{}c{}}0{BlCb}{{{d{Bh}}c}AfCd}{{{d{Bl}}c}AfCd}{BlCf}{dc{}}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{dAn}0{{}Ch}:{{Cj{Bf{{Bd{Bb}}}}{Cl{j}}}{{Af{jAl}}}}{{Cn{Bf{{Bd{Bb}}}}{Cl{j}}}{{Af{jAl}}}}{{{d{f{D`{Cj}}}}{d{Bl}}}{{Af{jAl}}}}{{Db{Bf{{Bd{Bb}}}}}{{Af{B`Al}}}}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{cc{}}{{}h}{{}c{}}{{{d{{Bf{Dd}}}}}{{Af{DfAl}}}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}`{DdDb}<;00{{{d{Dd}}}Dd}{{d{d{fc}}}j{}}{{dBj}j}{{}Dd}>={c{{Af{Dd}}}Bn}={{{d{Dd}}{d{fn}}}A`}=<;{{}{{Af{DdAl}}}}77{dc{}};:9``````````````````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{{{d{Al}}{d{fn}}}A`}0{DhAl}{DjAl}{DlAl}{DnAl}{cc{}}{E`Al}{{}h}{{}c{}}{{{d{Al}}}{{Aj{{d{Eb}}}}}}{dCb}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}```{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{BbBf}0{h{{d{c}}}{}}00{h{{d{fc}}}{}}00{hj}003>>><<<;;;{{{Bf{Dd}}{Bf{Ed}}{Bf{Df}}}{{Af{BbAl}}}}{EfEh}{EjEh}{{{d{fBb}}}{{Af{jAl}}}}{EfEl}{EfEn}{EjEn}{{{d{Bb}}}{{Af{EjAl}}}};{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{dAn}00{{{d{Bb}}}F`}{EjF`}`{EdDb}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}22{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{{{d{Ed}}}{{Af{jAl}}}}{cc{}}{{}h}{{}c{}}9{{{d{{Bf{Dd}}}}}{{Af{EdAl}}}}?>=","D":"G`","p":[[5,"Command",246],[1,"reference",null,null,1],[0,"mut"],[1,"usize"],[1,"unit"],[5,"Cli",0],[5,"Formatter",247],[8,"Result",247],[5,"ArgMatches",248],[8,"Error",249],[6,"Result",250,null,1],[5,"Id",251],[6,"Option",252,null,1],[6,"ArcellaError",136],[5,"TypeId",253],[5,"AlmeServerHandle",32],[5,"ArcellaRuntime",178],[5,"RwLock",254],[5,"Arc",255,null,1],[6,"AlmeRequest",51],[1,"u8"],[5,"AlmeResponse",51],[10,"Deserializer",256],[1,"str"],[5,"String",257],[10,"Serializer",258],[1,"bool"],[1,"u64"],[5,"UnixStream",259],[5,"Receiver",260],[5,"UnixListener",261],[5,"WriteHalf",262],[5,"PathBuf",263],[5,"ArcellaConfig",111],[5,"ModuleCache",98],[5,"Error",264],[5,"Error",265],[5,"Error",266],[5,"Error",267],[5,"JoinError",268],[10,"Error",269],[5,"StorageManager",228],[5,"ArcellaRuntimeEnvironment",178],[1,"u32"],[5,"ArcellaRuntimeStatus",178],[5,"Instant",270],[5,"SystemTime",270],[5,"Duration",271],[8,"Result",136],[8,"AnyResult",136]],"r":[],"b":[[163,"impl-Debug-for-ArcellaError"],[164,"impl-Display-for-ArcellaError"],[165,"impl-From%3CError%3E-for-ArcellaError"],[166,"impl-From%3CError%3E-for-ArcellaError"],[167,"impl-From%3CError%3E-for-ArcellaError"],[168,"impl-From%3CError%3E-for-ArcellaError"],[170,"impl-From%3CJoinError%3E-for-ArcellaError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAL4AGQAAAAAAAgAMABAAAAASAAMAFwAQACkAAAArAAIALwAAADEAAgA2ABIASgABAE4AAQBSAAsAYwAFAGoAAABsABIAgAAAAIIABgCfAAoAqwABAK4AGQDLAAIA0QAdAPAAAADyAAQA","P":[[4,"T"],[8,""],[11,"T"],[13,""],[16,"T"],[17,""],[21,"U"],[23,""],[27,"U,T"],[28,"U"],[29,""],[33,"T"],[37,""],[39,"T"],[40,""],[41,"U"],[42,""],[48,"U,T"],[49,"U"],[50,""],[56,"T"],[60,""],[61,"T"],[62,""],[64,"T"],[68,"__D"],[70,""],[75,"T"],[77,""],[79,"U"],[81,""],[82,"__S"],[84,""],[85,"T"],[86,"U,T"],[88,"U"],[90,""],[99,"T"],[103,""],[104,"T"],[105,""],[106,"U"],[107,""],[108,"U,T"],[109,"U"],[110,""],[113,"T"],[115,""],[118,"T"],[119,""],[121,"T"],[123,"__D"],[124,""],[126,"T"],[127,""],[128,"U"],[129,""],[132,"T"],[133,"U,T"],[134,"U"],[135,""],[158,"T"],[162,""],[169,"T"],[170,""],[172,"U"],[173,""],[175,"U,T"],[176,"U"],[177,""],[181,"T"],[187,""],[189,"T"],[195,""],[199,"T"],[202,""],[205,"U"],[208,""],[217,"U,T"],[220,"U"],[223,""],[230,"T"],[232,""],[234,"T"],[236,""],[238,"T"],[239,""],[240,"U"],[241,""],[243,"U,T"],[244,"U"],[245,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7796]}