var searchIndex = new Map(JSON.parse('[["alme_proto",{"t":"FFONNNNNNNOONNNNNNNNNONNNONNNNNNN","n":["AlmeRequest","AlmeResponse","args","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cmd","data","deserialize","","error","fmt","","from","","into","","message","serialize","","success","","to_owned","try_from","","try_into","","type_id",""],"q":[[0,"alme_proto"],[33,"serde_json::value"],[34,"alloc::string"],[35,"core::option"],[36,"core::result"],[37,"serde_core::de"],[38,"core::fmt"],[39,"serde_core::ser"],[40,"core::any"]],"i":"``b0A`1011110100101010010001101010","f":"``{bd}{f{{f{c}}}{}}0{{{f{h}}}{{f{hc}}}{}}0{{{f{b}}}b}{{f{f{hc}}}j{}}{{fl}j}{bn}{A`Ab}{c{{Ad{b}}}Af}{c{{Ad{A`}}}Af}{{{f{Ah}}}A`}{{{f{b}}{f{hAj}}}Al}{{{f{A`}}{f{hAj}}}Al}{cc{}}0{{}c{}}0{A`n}{{{f{b}}c}AdAn}{{{f{A`}}c}AdAn}{{{f{Ah}}{Ab{d}}}A`}{A`B`}{fc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{fBb}0","D":"Al","p":[[5,"AlmeRequest",0],[6,"Value",33],[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[1,"u8"],[5,"String",34],[5,"AlmeResponse",0],[6,"Option",35,null,1],[6,"Result",36,null,1],[10,"Deserializer",37],[1,"str"],[5,"Formatter",38],[8,"Result",38],[10,"Serializer",39],[1,"bool"],[5,"TypeId",40]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABMABQAEAAYADQABABAAAQAXAAEAGwAGAA==","P":[[3,"T"],[7,""],[8,"T"],[9,""],[12,"__D"],[14,""],[17,"T"],[19,"U"],[21,""],[22,"__S"],[24,""],[26,"T"],[27,"U,T"],[29,"U"],[31,""]]}],["arcella",{"t":"FCNNNNCNNCNNNCNNNNNNNCHCCCNNNNNFFFONNNNNNNNNOCONNNNNNNNNNNNNNNNNNNNNNNNOONNCNOHNONNNNNNNNNNHHHHHFFJJOOOHOHHHOFNNNNNNNNNNNNFONNONNNONNNNNNNNNHOOONNNNPIGPPPPPPPPPPPPPPPIPPPPNNNNNNNNNNNNNNNNNNNNFFJFONNNNNNNNNNNHHOHHHNNNNNNNHHNNNOONNNNHHHNNNNNNHOOONNNNOONNNNNNNNNNFFFNNNNNNOONNNNNNNNNONNNNNNNNNNOONOOONONNNNNNNNNNOFONNOONNNNNNNONNNN","n":["Cli","alme","augment_args","augment_args_for_update","borrow","borrow_mut","cache","command","command_for_update","config","deref","deref_mut","drop","error","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","log","main","manifest","runtime","storage","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","AlmeRequest","AlmeResponse","AlmeServerHandle","args","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","cmd","commands","data","deref","","","deref_mut","","","deserialize","","drop","","","","error","fmt","","from","","","init","","","into","","","join_handle","message","serialize","","server","shutdown","shutdown_tx","start","success","","to_owned","try_from","","","try_into","","","type_id","","","dispatch_command","handle_log_tail","handle_module_list","handle_ping","handle_status","AlmeRequest","AlmeResponse","MAX_READER_TIMEOUT","MAX_REQUEST_LENGTH","args","cmd","data","handle_connection","message","run_server_loop","send_response","spawn_server","success","ModuleCache","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","ArcellaConfig","base_dir","borrow","borrow_mut","cache_dir","clone","clone_into","clone_to_uninit","config_dir","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","load","log_dir","modules_dir","socket_path","to_owned","try_from","try_into","type_id","Alme","AnyResult","ArcellaError","Config","Err","","HomeDirNotFound","Instance","Internal","InvalidRequest","Io","IoWithPath","Join","Json","Manifest","ModuleNotFound","Ok","","Result","RuntimeError","Serialization","Wasmtime","Wat","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","","","","","","init","into","source","to_string","try_from","try_into","type_id","AlmeBufferLayer","EventVisitor","LOG_BUFFER","TracingConfig","alme_buffer_size","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","default","","default_alme_buffer_size","default_file","default_level","default_log_level","default_stderr","default_structured","deref","","","deref_mut","","","deserialize","deserialize_level_filter","deserialize_module_levels","drop","","","fields","file","fmt","from","","","get_log_buffer","get_recent_logs","init","","","","into","","","load_tracing_config","max_size","message","modules","new","on_event","record_debug","record_str","stderr","structured","to_owned","try_from","","","try_into","","","type_id","","","ArcellaRuntime","ArcellaRuntimeEnvironment","ArcellaRuntimeStatus","borrow","","","borrow_mut","","","cache","config","deref","","","deref_mut","","","drop","","","environment","from","","","init","","","into","","","new","pid","","shutdown","start_instant","start_time","start_utc","status","storage","try_from","","","try_into","","","type_id","","","uptime","","StorageManager","base_dir","borrow","borrow_mut","cache_dir","config_dir","deref","deref_mut","drop","ensure_directories","from","init","into","modules_dir","new","try_from","try_into","type_id"],"q":[[0,"arcella"],[31,"arcella::alme"],[91,"arcella::alme::commands"],[96,"arcella::alme::server"],[100,"arcella::alme"],[103,"arcella::alme::server"],[104,"arcella::alme"],[105,"arcella::alme::server"],[108,"arcella::alme"],[109,"arcella::cache"],[122,"arcella::config"],[148,"arcella::error"],[191,"arcella::log"],[260,"arcella::runtime"],[310,"arcella::storage"],[328,"clap_builder::builder::command"],[329,"core::fmt"],[330,"clap_builder::parser::matches::arg_matches"],[331,"clap_builder"],[332,"core::result"],[333,"clap_builder::util::id"],[334,"core::option"],[335,"core::any"],[336,"alme_proto"],[337,"serde_json::value"],[338,"alloc::string"],[339,"serde_core::de"],[340,"serde_core::ser"],[341,"tokio::sync::rwlock"],[342,"alloc::sync"],[343,"tokio::net::unix::stream"],[344,"tokio::sync::broadcast"],[345,"tokio::net::unix::listener"],[346,"tokio::io::split"],[347,"std::path"],[348,"std::io::error"],[349,"serde_json::error"],[350,"tokio::runtime::task::error"],[351,"anyhow"],[352,"wat"],[353,"core::error"],[354,"std::sync::once_lock"],[355,"tracing_core::metadata"],[356,"std::collections::hash::map"],[357,"alloc::vec"],[358,"alloc::collections::vec_deque"],[359,"std::sync::poison::mutex"],[360,"tracing_appender::non_blocking"],[361,"tracing_core::event"],[362,"tracing_subscriber::layer::context"],[363,"tracing_core::subscriber"],[364,"tracing_subscriber::registry"],[365,"tracing_core::field"],[366,"std::time"],[367,"time::offset_date_time"],[368,"core::time"]],"i":"``l000`00`000`0000000`````00000```B`0BhBl2102222`12102102121001212102102100121`00`112210210210`````````221`1```1`Dj00000000000`Dh0000000000000000`0000000Al``0HfHh222222222210`222222222222222222222222````EjFj1El12022220``2```1201202``120022120```120120`1021100222120120120```GjGnCd21000210210210021021021002102120021021021001`Gh0000000000000000","f":"``{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}`{{}b}0`{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}`{{{d{l}}{d{fn}}}A`}{cc{}}{{{d{Ab}}}{{Af{lAd}}}}{{{d{fAb}}}{{Af{lAd}}}}{{}{{Aj{Ah}}}}{{}h}{{}c{}}`{{}{{Af{jAl}}}}```{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}{{{d{fl}}{d{Ab}}}{{Af{jAd}}}}{{{d{fl}}{d{fAb}}}{{Af{jAd}}}}```{B`Bb}{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{B`}}}B`}{{d{d{fc}}}j{}}{{dBd}j}{B`Bf}`{BhAj}{h{{d{c}}}{}}00{h{{d{fc}}}{}}00{c{{Af{B`}}}Bj}{c{{Af{Bh}}}Bj}{hj}0{{{d{fBl}}}j}1{{{d{Bn}}}Bh}{{{d{B`}}{d{fn}}}{{Af{jC`}}}}{{{d{Bh}}{d{fn}}}{{Af{jC`}}}}{cc{}}00{{}h}00{{}c{}}00{BlAj}{BhBf}{{{d{B`}}c}AfCb}{{{d{Bh}}c}AfCb}`{Bl{{Af{jAl}}}}4{{{Ch{{Cf{Cd}}}}}{{Af{BlAl}}}}{{{d{Bn}}{Aj{Bb}}}Bh}{BhCj}{dc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{dAn}00{{{d{Bn}}{d{Bb}}{d{{Ch{{Cf{Cd}}}}}}}Bh}{{{d{Bb}}}Bh}{{{d{{Ch{{Cf{Cd}}}}}}}Bh}{{}Bh}1``{{}Cl}{{}h}{B`Bb}{B`Bf}{BhAj}{{Cn{Ch{{Cf{Cd}}}}{D`{j}}}{{Af{jAl}}}}{BhBf}{{Db{Ch{{Cf{Cd}}}}{D`{j}}}{{Af{jAl}}}}{{{d{f{Dd{Cn}}}}{d{Bh}}}{{Af{jAl}}}}{{Df{Ch{{Cf{Cd}}}}}{{Af{BlAl}}}}{BhCj}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{cc{}}?{{}c{}}{{{d{{Ch{Dh}}}}}{{Af{DjAl}}}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}`{DhDf};:0{{{d{Dh}}}Dh}{{d{d{fc}}}j{}}{{dBd}j}3{{}Dh}=<{c{{Af{Dh}}}Bj}<{{{d{Dh}}{d{fn}}}A`}<{{}h}<{{}{{Af{DhAl}}}}888{dc{}}<;:```````````````````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{{{d{Al}}{d{fn}}}A`}0{DlAl}{DnAl}{cc{}}{E`Al}{EbAl}{EdAl}>{{}c{}}{{{d{Al}}}{{Aj{{d{Ef}}}}}}{dBf}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}``{{}Eh}`{Ejh}{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{Ej}}}Ej}{{d{d{fc}}}j{}}{{dBd}j}{{}Ej}{{}El}{{}h}{{}Cj}{EjEn}{{}En}22{h{{d{c}}}{}}00{h{{d{fc}}}{}}00{c{{Af{Ej}}}Bj}{c{{Af{En}}}Bj}{c{{Af{{F`{BfEn}}}}}Bj}{hj}00{ElFb}{EjCj}{{{d{Ej}}{d{fn}}}A`}{cc{}}00{{}{{Aj{{d{{Ch{{Ff{{Fd{Bf}}}}}}}}}}}}{h{{Fb{Bf}}}}{{{d{Dh}}}{{Af{{Aj{Fh}}Al}}}}{{}h}00{{}c{}}00{{{d{Df}}}{{Af{EjAl}}}}{Fjh}{ElBf}{EjF`}{hFj}{{{d{Fj}}{d{Fl}}{Fn{c}}}j{G`Gb}}{{{d{fEl}}{d{Gd}}{d{Gf}}}j}{{{d{fEl}}{d{Gd}}{d{Bn}}}j}??{dc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{dAn}00```{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{CdCh}0{h{{d{c}}}{}}00{h{{d{fc}}}{}}00{hj}003{cc{}}00{{}h}00{{}c{}}00{{{Ch{Dh}}{Ch{Gh}}{Ch{Dj}}}{{Af{CdAl}}}}{GjGl}{GnGl}{{{d{fCd}}}{{Af{jAl}}}}{GjH`}{GnHb}{GjHb}{{{d{Cd}}}{{Af{GnAl}}}}>{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{dAn}00{{{d{Cd}}}Hd}{GnHd}`{GhDf}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}22{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{{{d{Gh}}}{{Af{jAl}}}}{cc{}}{{}h}{{}c{}}9{{{d{{Ch{Dh}}}}}{{Af{GhAl}}}}?>=","D":"Ld","p":[[5,"Command",328],[1,"reference",null,null,1],[0,"mut"],[1,"usize"],[1,"unit"],[5,"Cli",0],[5,"Formatter",329],[8,"Result",329],[5,"ArgMatches",330],[8,"Error",331],[6,"Result",332,null,1],[5,"Id",333],[6,"Option",334,null,1],[6,"ArcellaError",148],[5,"TypeId",335],[5,"AlmeRequest",108,336],[6,"Value",337],[1,"u8"],[5,"String",338],[5,"AlmeResponse",108,336],[10,"Deserializer",339],[5,"AlmeServerHandle",108],[1,"str"],[5,"Error",329],[10,"Serializer",340],[5,"ArcellaRuntime",260],[5,"RwLock",341],[5,"Arc",342,null,1],[1,"bool"],[1,"u64"],[5,"UnixStream",343],[5,"Receiver",344],[5,"UnixListener",345],[5,"WriteHalf",346],[5,"PathBuf",347],[5,"ArcellaConfig",122],[5,"ModuleCache",109],[5,"Error",348],[5,"Error",349],[5,"JoinError",350],[5,"Error",351],[5,"Error",352],[10,"Error",353],[5,"OnceLock",354],[5,"TracingConfig",191],[5,"EventVisitor",191],[5,"LevelFilter",355],[5,"HashMap",356],[5,"Vec",357],[5,"VecDeque",358],[5,"Mutex",359],[5,"WorkerGuard",360],[5,"AlmeBufferLayer",191],[5,"Event",361],[5,"Context",362],[10,"Subscriber",363],[10,"LookupSpan",364],[5,"Field",365],[10,"Debug",329],[5,"StorageManager",310],[5,"ArcellaRuntimeEnvironment",260],[1,"u32"],[5,"ArcellaRuntimeStatus",260],[5,"Instant",366],[5,"OffsetDateTime",367],[5,"Duration",368],[8,"Result",148],[8,"AnyResult",148]],"r":[[31,336],[32,336],[34,336],[35,336],[36,336],[38,336],[39,336],[41,336],[42,336],[43,336],[44,336],[46,336],[47,336],[48,336],[50,336],[51,336],[53,336],[54,336],[55,336],[56,336],[59,336],[60,336],[61,336],[62,336],[63,336],[65,336],[66,336],[68,336],[69,336],[72,336],[73,336],[74,336],[79,336],[80,336],[81,336],[82,336],[83,336],[85,336],[86,336],[88,336],[89,336],[96,336],[97,336],[100,336],[101,336],[102,336],[104,336],[108,336]],"b":[[176,"impl-Display-for-ArcellaError"],[177,"impl-Debug-for-ArcellaError"],[178,"impl-From%3CError%3E-for-ArcellaError"],[179,"impl-From%3CError%3E-for-ArcellaError"],[181,"impl-From%3CJoinError%3E-for-ArcellaError"],[182,"impl-From%3CError%3E-for-ArcellaError"],[183,"impl-From%3CError%3E-for-ArcellaError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOYAJQAAAAAAAgALAA8AAAARAAMAFwAIACIAAAAkAAgAMAALAD0AAQBCAAIASAAAAEoAAQBOAAAAUgAJAGMAAABuAAUAdQAAAHcAEgCLAAAAjQAHAKwACAC2AAMAuwAEAMEAAADFAAwA0wAJAN8AAwDkAAAA6AAAAOsAAgDyAAEA9QADAPsAHgAdAQIAIwEdAEIBAABEAQQA","P":[[4,"T"],[7,""],[10,"T"],[12,""],[15,"T"],[16,""],[20,"U"],[22,""],[26,"U,T"],[27,"U"],[28,""],[35,"T"],[41,""],[42,"T"],[43,""],[47,"T"],[53,"__D"],[55,""],[62,"T"],[65,""],[68,"U"],[71,""],[73,"__S"],[76,""],[81,"T"],[82,"U,T"],[85,"U"],[88,""],[110,"T"],[114,""],[115,"T"],[116,""],[117,"U"],[118,""],[119,"U,T"],[120,"U"],[121,""],[124,"T"],[126,""],[128,"T"],[129,""],[132,"T"],[134,"__D"],[135,""],[137,"T"],[138,""],[139,"U"],[140,""],[144,"T"],[145,"U,T"],[146,"U"],[147,""],[171,"T"],[175,""],[180,"T"],[181,""],[185,"U"],[186,""],[188,"U,T"],[189,"U"],[190,""],[196,"T"],[202,""],[203,"T"],[204,""],[213,"T"],[219,"__D"],[220,"D"],[222,""],[228,"T"],[231,""],[237,"U"],[240,""],[245,"S"],[246,""],[250,"T"],[251,"U,T"],[254,"U"],[257,""],[263,"T"],[269,""],[271,"T"],[277,""],[281,"T"],[284,""],[287,"U"],[290,""],[299,"U,T"],[302,"U"],[305,""],[312,"T"],[314,""],[316,"T"],[318,""],[320,"T"],[321,""],[322,"U"],[323,""],[325,"U,T"],[326,"U"],[327,""]]}],["arcella_cli",{"t":"FGPPPPPNNNNNNNNNONNNNNNNHNHNNNHHNNNNNNNNNNO","n":["Cli","Commands","LogTail","ModuleList","Ping","Shell","Status","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","","borrow_mut","","command","","command_for_update","from","","from_arg_matches","","from_arg_matches_mut","","get_default_socket_path","group_id","handle_command","has_subcommand","into","","main","send_alme_request","try_from","","try_into","","type_id","","update_from_arg_matches","","update_from_arg_matches_mut","","n"],"q":[[0,"arcella_cli"],[42,"arcella_cli::Commands"],[43,"clap_builder::builder::command"],[44,"clap_builder::parser::matches::arg_matches"],[45,"clap_builder"],[46,"core::result"],[47,"std::path"],[48,"clap_builder::util::id"],[49,"core::option"],[50,"anyhow"],[51,"alme_proto"],[52,"core::any"]],"i":"``j0000h0110101000010101`0`101``0101010101Bf","f":"```````{bb}000{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{}b}{hj}1{cc{}}0{{{d{l}}}{{A`{hn}}}}{{{d{l}}}{{A`{jn}}}}{{{d{fl}}}{{A`{hn}}}}{{{d{fl}}}{{A`{jn}}}}{{}Ab}{{}{{Af{Ad}}}}{j{{Aj{Ah}}}}{{{d{Al}}}An}{{}c{}}0{{}{{Aj{Ah}}}}{{{d{Ab}}B`}{{Aj{Bb}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{dBd}0{{{d{fh}}{d{l}}}{{A`{Ahn}}}}{{{d{fj}}{d{l}}}{{A`{Ahn}}}}{{{d{fh}}{d{fl}}}{{A`{Ahn}}}}{{{d{fj}}{d{fl}}}{{A`{Ahn}}}}{BfBh}","D":"Af","p":[[5,"Command",43],[1,"reference",null,null,1],[0,"mut"],[5,"Cli",0],[6,"Commands",0],[5,"ArgMatches",44],[8,"Error",45],[6,"Result",46,null,1],[5,"PathBuf",47],[5,"Id",48],[6,"Option",49,null,1],[1,"unit"],[8,"Result",50],[1,"str"],[1,"bool"],[5,"AlmeRequest",51],[5,"AlmeResponse",51],[5,"TypeId",52],[15,"LogTail",42],[1,"usize"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACAABQAAAAAAAgAAAAgACgAVAAcAHwALAA==","P":[[11,"T"],[15,""],[18,"T"],[20,""],[28,"U"],[30,""],[32,"U,T"],[34,"U"],[36,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[1376,11025,1838]}