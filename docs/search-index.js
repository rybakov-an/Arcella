var searchIndex = new Map(JSON.parse('[["arcella",{"t":"FCNNNNCCNNCNNNCNNNNNNNCHCCCNNNNNFNNCNNNNNNNOCCNOHNNNHHHHHFFONNNNNNNOONNNNNNNNNNNNNNNNNONNONNNNNNNJJHHHHFNNNNNNNNNNNNFONNONNNONNNNNNNNNHOOONNNNPIGPPPPPPPPPPPPPPPIPPPPNNNNNNNNNNNNNNNNNNNNFFJFONNNNNNNNNNNHHOHHHNNNNNNNHHNNNOONNNNHHHNNNNNNHOOONNNNOONNNNNNNNNNFFFNNNNNNOONNNNNNNNNONNNNNNNNNNOONOOONONNNNNNNNNNOFONNOONNNNNNNONNNN","n":["Cli","alme","augment_args","augment_args_for_update","borrow","borrow_mut","cache","cli","command","command_for_update","config","deref","deref_mut","drop","error","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","log","main","manifest","runtime","storage","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","AlmeServerHandle","borrow","borrow_mut","commands","deref","deref_mut","drop","","from","init","into","join_handle","protocol","server","shutdown","shutdown_tx","start","try_from","try_into","type_id","dispatch_command","handle_log_tail","handle_module_list","handle_ping","handle_status","AlmeRequest","AlmeResponse","args","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cmd","data","deref","","deref_mut","","deserialize","","drop","","error","fmt","","from","","init","","into","","message","serialize","success","","to_owned","try_from","","try_into","","type_id","","MAX_READER_TIMEOUT","MAX_REQUEST_LENGTH","handle_connection","run_server_loop","send_response","spawn_server","ModuleCache","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","ArcellaConfig","base_dir","borrow","borrow_mut","cache_dir","clone","clone_into","clone_to_uninit","config_dir","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","load","log_dir","modules_dir","socket_path","to_owned","try_from","try_into","type_id","Alme","AnyResult","ArcellaError","Config","Err","","HomeDirNotFound","Instance","Internal","InvalidRequest","Io","IoWithPath","Join","Json","Manifest","ModuleNotFound","Ok","","Result","RuntimeError","Serialization","Wasmtime","Wat","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","","","","","","init","into","source","to_string","try_from","try_into","type_id","AlmeBufferLayer","EventVisitor","LOG_BUFFER","TracingConfig","alme_buffer_size","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","default","","default_alme_buffer_size","default_file","default_level","default_log_level","default_stderr","default_structured","deref","","","deref_mut","","","deserialize","deserialize_level_filter","deserialize_module_levels","drop","","","fields","file","fmt","from","","","get_log_buffer","get_recent_logs","init","","","","into","","","load_tracing_config","max_size","message","modules","new","on_event","record_debug","record_str","stderr","structured","to_owned","try_from","","","try_into","","","type_id","","","ArcellaRuntime","ArcellaRuntimeEnvironment","ArcellaRuntimeStatus","borrow","","","borrow_mut","","","cache","config","deref","","","deref_mut","","","drop","","","environment","from","","","init","","","into","","","new","pid","","shutdown","start_instant","start_time","start_utc","status","storage","try_from","","","try_into","","","type_id","","","uptime","","StorageManager","base_dir","borrow","borrow_mut","cache_dir","config_dir","deref","deref_mut","drop","ensure_directories","from","init","into","modules_dir","new","try_from","try_into","type_id"],"q":[[0,"arcella"],[32,"arcella::alme"],[52,"arcella::alme::commands"],[57,"arcella::alme::protocol"],[97,"arcella::alme::server"],[103,"arcella::cache"],[116,"arcella::config"],[142,"arcella::error"],[185,"arcella::log"],[254,"arcella::runtime"],[304,"arcella::storage"],[322,"clap_builder::builder::command"],[323,"core::fmt"],[324,"clap_builder::parser::matches::arg_matches"],[325,"clap_builder"],[326,"core::result"],[327,"clap_builder::util::id"],[328,"core::option"],[329,"core::any"],[330,"tokio::sync::rwlock"],[331,"alloc::sync"],[332,"serde_json::value"],[333,"alloc::string"],[334,"serde_core::de"],[335,"serde_core::ser"],[336,"tokio::net::unix::stream"],[337,"tokio::sync::broadcast"],[338,"tokio::net::unix::listener"],[339,"tokio::io::split"],[340,"std::path"],[341,"std::io::error"],[342,"tokio::runtime::task::error"],[343,"serde_json::error"],[344,"wat"],[345,"anyhow"],[346,"core::error"],[347,"std::sync::once_lock"],[348,"tracing_core::metadata"],[349,"std::collections::hash::map"],[350,"alloc::vec"],[351,"alloc::collections::vec_deque"],[352,"std::sync::poison::mutex"],[353,"tracing_appender::non_blocking"],[354,"tracing_core::event"],[355,"tracing_subscriber::layer::context"],[356,"tracing_core::subscriber"],[357,"tracing_subscriber::registry"],[358,"tracing_core::field"],[359,"std::time"],[360,"time::offset_date_time"],[361,"core::time"]],"i":"``l000``00`000`0000000`````00000`B`0`00000000``00`000```````Bn0Bl10111101010101001010101000001101010```````Dh00000000000`Df0000000000000000`0000000Al``0HdHf222222222210`222222222222222222222222````EhFh1Ej12022220``2```1201202``120022120```120120`1021100222120120120```GhGlBb21000210210210021021021002102120021021021001`Gf0000000000000000","f":"``{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}``{{}b}0`{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}`{{{d{l}}{d{fn}}}A`}{cc{}}{{{d{Ab}}}{{Af{lAd}}}}{{{d{fAb}}}{{Af{lAd}}}}{{}{{Aj{Ah}}}}{{}h}{{}c{}}`{{}{{Af{jAl}}}}```{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}{{{d{fl}}{d{Ab}}}{{Af{jAd}}}}{{{d{fl}}{d{fAb}}}{{Af{jAd}}}}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}`{h{{d{c}}}{}}{h{{d{fc}}}{}}{{{d{fB`}}}j}{hj}{cc{}}>={B`Aj}``{B`{{Af{jAl}}}}1{{{Bf{{Bd{Bb}}}}}{{Af{B`Al}}}}>=<{{{d{Bh}}{d{Bj}}{d{{Bf{{Bd{Bb}}}}}}}Bl}{{{d{Bj}}}Bl}{{{d{{Bf{{Bd{Bb}}}}}}}Bl}{{}Bl}1``{BnBj}>>=={{{d{Bn}}}Bn}{{d{d{fc}}}j{}}{{dC`}j}{BnCb}{BlAj}{h{{d{c}}}{}}0{h{{d{fc}}}{}}0{c{{Af{Bn}}}Cd}{c{{Af{Bl}}}Cd}{hj}0{{{d{Bh}}}Bl}{{{d{Bn}}{d{fn}}}A`}{{{d{Bl}}{d{fn}}}A`}{cc{}}0{{}h}0{{}c{}}0{BlCb}{{{d{Bl}}c}AfCf}{{{d{Bh}}{Aj{Bj}}}Bl}{BlCh}{dc{}}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{dAn}0{{}Cj}:{{Cl{Bf{{Bd{Bb}}}}{Cn{j}}}{{Af{jAl}}}}{{D`{Bf{{Bd{Bb}}}}{Cn{j}}}{{Af{jAl}}}}{{{d{f{Db{Cl}}}}{d{Bl}}}{{Af{jAl}}}}{{Dd{Bf{{Bd{Bb}}}}}{{Af{B`Al}}}}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{cc{}}{{}h}{{}c{}}{{{d{{Bf{Df}}}}}{{Af{DhAl}}}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}`{DfDd}<;0{{{d{Df}}}Df}{{d{d{fc}}}j{}}{{dC`}j}3{{}Df}>={c{{Af{Df}}}Cd}={{{d{Df}}{d{fn}}}A`}=<;{{}{{Af{DfAl}}}}777{dc{}};:9```````````````````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{{{d{Al}}{d{fn}}}A`}0{DjAl}{cc{}}{DlAl}{DnAl}{E`Al}{EbAl}{{}h}{{}c{}}{{{d{Al}}}{{Aj{{d{Ed}}}}}}{dCb}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAn}``{{}Ef}`{Ehh}{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{Eh}}}Eh}{{d{d{fc}}}j{}}{{dC`}j}{{}Eh}{{}Ej}?{{}Ch}{EhEl}{{}El}22{h{{d{c}}}{}}00{h{{d{fc}}}{}}00{c{{Af{Eh}}}Cd}{c{{Af{El}}}Cd}{c{{Af{{En{CbEl}}}}}Cd}{hj}00{EjF`}{EhCh}{{{d{Eh}}{d{fn}}}A`}{cc{}}00{{}{{Aj{{d{{Bf{{Fd{{Fb{Cb}}}}}}}}}}}}{h{{F`{Cb}}}}{{{d{Df}}}{{Af{{Aj{Ff}}Al}}}}{{}h}00{{}c{}}00{{{d{Dd}}}{{Af{EhAl}}}}{Fhh}{EjCb}{EhEn}{hFh}{{{d{Fh}}{d{Fj}}{Fl{c}}}j{FnG`}}{{{d{fEj}}{d{Gb}}{d{Gd}}}j}{{{d{fEj}}{d{Gb}}{d{Bh}}}j}??{dc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{dAn}00```{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{BbBf}0{h{{d{c}}}{}}00{h{{d{fc}}}{}}00{hj}003{cc{}}00{{}h}00{{}c{}}00{{{Bf{Df}}{Bf{Gf}}{Bf{Dh}}}{{Af{BbAl}}}}{GhGj}{GlGj}{{{d{fBb}}}{{Af{jAl}}}}{GhGn}{GlH`}{GhH`}{{{d{Bb}}}{{Af{GlAl}}}}>{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{dAn}00{{{d{Bb}}}Hb}{GlHb}`{GfDd}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}22{h{{d{c}}}{}}{h{{d{fc}}}{}}{hj}{{{d{Gf}}}{{Af{jAl}}}}{cc{}}{{}h}{{}c{}}9{{{d{{Bf{Df}}}}}{{Af{GfAl}}}}?>=","D":"Jj","p":[[5,"Command",322],[1,"reference",null,null,1],[0,"mut"],[1,"usize"],[1,"unit"],[5,"Cli",0],[5,"Formatter",323],[8,"Result",323],[5,"ArgMatches",324],[8,"Error",325],[6,"Result",326,null,1],[5,"Id",327],[6,"Option",328,null,1],[6,"ArcellaError",142],[5,"TypeId",329],[5,"AlmeServerHandle",32],[5,"ArcellaRuntime",254],[5,"RwLock",330],[5,"Arc",331,null,1],[1,"str"],[6,"Value",332],[5,"AlmeResponse",57],[5,"AlmeRequest",57],[1,"u8"],[5,"String",333],[10,"Deserializer",334],[10,"Serializer",335],[1,"bool"],[1,"u64"],[5,"UnixStream",336],[5,"Receiver",337],[5,"UnixListener",338],[5,"WriteHalf",339],[5,"PathBuf",340],[5,"ArcellaConfig",116],[5,"ModuleCache",103],[5,"Error",341],[5,"JoinError",342],[5,"Error",343],[5,"Error",344],[5,"Error",345],[10,"Error",346],[5,"OnceLock",347],[5,"TracingConfig",185],[5,"EventVisitor",185],[5,"LevelFilter",348],[5,"HashMap",349],[5,"Vec",350],[5,"VecDeque",351],[5,"Mutex",352],[5,"WorkerGuard",353],[5,"AlmeBufferLayer",185],[5,"Event",354],[5,"Context",355],[10,"Subscriber",356],[10,"LookupSpan",357],[5,"Field",358],[10,"Debug",323],[5,"StorageManager",304],[5,"ArcellaRuntimeEnvironment",254],[1,"u32"],[5,"ArcellaRuntimeStatus",254],[5,"Instant",359],[5,"OffsetDateTime",360],[5,"Duration",361],[8,"Result",142],[8,"AnyResult",142]],"r":[],"b":[[170,"impl-Display-for-ArcellaError"],[171,"impl-Debug-for-ArcellaError"],[172,"impl-From%3CError%3E-for-ArcellaError"],[174,"impl-From%3CJoinError%3E-for-ArcellaError"],[175,"impl-From%3CError%3E-for-ArcellaError"],[176,"impl-From%3CError%3E-for-ArcellaError"],[177,"impl-From%3CError%3E-for-ArcellaError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAO0AJQAAAAAAAgAMABAAAAASAAMAGAALACUAAwAqAAAALAABADAAAAAyAAIAOgAAAD0ABgBFAAsAUwABAFcACwBoAAUAbwAAAHEAEgCFAAAAhwAHAKYABwCvAAQAtQAEALsAAAC/AAwAzQAJANkAAwDeAAAA4gAAAOUAAgDsAAEA7wADAPUAHgAXAQIAHQEdADwBAAA+AQQA","P":[[4,"T"],[8,""],[11,"T"],[13,""],[16,"T"],[17,""],[21,"U"],[23,""],[27,"U,T"],[28,"U"],[29,""],[33,"T"],[38,""],[40,"T"],[41,""],[42,"U"],[43,""],[49,"U,T"],[50,"U"],[51,""],[60,"T"],[64,""],[65,"T"],[66,""],[69,"T"],[73,"__D"],[75,""],[80,"T"],[82,""],[84,"U"],[86,""],[87,"__S"],[88,""],[90,"T"],[91,"U,T"],[93,"U"],[95,""],[104,"T"],[108,""],[109,"T"],[110,""],[111,"U"],[112,""],[113,"U,T"],[114,"U"],[115,""],[118,"T"],[120,""],[122,"T"],[123,""],[126,"T"],[128,"__D"],[129,""],[131,"T"],[132,""],[133,"U"],[134,""],[138,"T"],[139,"U,T"],[140,"U"],[141,""],[165,"T"],[169,""],[173,"T"],[174,""],[179,"U"],[180,""],[182,"U,T"],[183,"U"],[184,""],[190,"T"],[196,""],[197,"T"],[198,""],[207,"T"],[213,"__D"],[214,"D"],[216,""],[222,"T"],[225,""],[231,"U"],[234,""],[239,"S"],[240,""],[244,"T"],[245,"U,T"],[248,"U"],[251,""],[257,"T"],[263,""],[265,"T"],[271,""],[275,"T"],[278,""],[281,"U"],[284,""],[293,"U,T"],[296,"U"],[299,""],[306,"T"],[308,""],[310,"T"],[312,""],[314,"T"],[315,""],[316,"U"],[317,""],[319,"U,T"],[320,"U"],[321,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[10493]}