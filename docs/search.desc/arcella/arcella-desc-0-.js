searchState.loadedDescShard("arcella", 0, "Arcella: Modular WebAssembly Runtime\nCentralized error handling for Arcella.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLogging and tracing for the Arcella Runtime.\nModule manifest parsing and validation.\nCommand dispatching logic for the ALME (Arcella Local …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nALME (Arcella Local Management Extensions) Unix socket …\nGracefully shuts down the ALME server and waits for it to …\nStarts the ALME (Arcella Local Management Extensions) …\nDispatches an ALME command to the appropriate handler …\nHandles the <code>&quot;log:tail&quot;</code> ALME command.\nHandles the <code>&quot;module:list&quot;</code> ALME command.\nHandles the <code>&quot;ping&quot;</code> ALME command.\nHandles the <code>&quot;status&quot;</code> ALME command.\nMaximum allowed length of an incoming ALME request in …\nHandles a single ALME client connection for its entire …\nRuns the main accept loop for the ALME server.\nSerializes an <code>AlmeResponse</code> to JSON and writes it to the …\nSpawns the ALME (Arcella Local Management Extensions) …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>Result&lt;T, Error&gt;</code>\nThe root error type for all Arcella-specific failures.\nConfiguration loading or parsing error.\nContains the error value\nContains the error value\nGeneral-purpose error for unexpected conditions.\nI/O error (file not found, permission denied, etc.).\nIO error with associated path for better diagnostics\nTask join error.\nJSON serialization/deserialization error.\nContains the success value\nContains the success value\nConvenient alias for <code>Result&lt;T, ArcellaError&gt;</code>.\nRuntime error.\nFailed to parse WebAssembly Text Format (<code>.wat</code>).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA tracing layer that writes events to an in-memory ring …\nIn-memory ring buffer storing the most recent log entries. …\nArcella tracing configuration.\nMaximum size of the in-memory ring buffer for ALME (in log …\nDefault log level for targets under the <code>arcella</code> namespace.\nHelper: deserialize LevelFilter from string (e.g., “info…\nHelper: deserialize a map of per-module log levels.\nWrite logs to the <code>arcella.log</code> file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns up to <code>n</code> most recent log entries from the in-memory …\nInitializes the global <code>tracing</code> subscriber based on the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads tracing configuration from a TOML file.\nPer-module/target log levels.\nOutput logs to stderr.\nUse structured (JSON) format for file logging.\nRepresents a complete component bundle with all manifests\nWrapper to match TOML structure: <code>[component]</code>\nOptional overrides for deployment template parameters\nRuntime-specific deployment configuration created by …\nWrapper to match TOML structure: <code>[deployment]</code>\nRecommended deployment configuration that ships with the …\nWrapper to match TOML structure: <code>[deployment]</code>\nComplete deployment configuration ready for execution\nExecution isolation mode.\nRun the module directly in the main Arcella tokio thread.\nResource requirements and limits\nConfiguration for module lifecycle entry points.\nRun the module in a separate <code>arcella-worker</code> process.\nWhether the module uses async WebAssembly\nOverride async mode\nCPU shares (relative weight)\nCreates a full deployment by combining template and …\nSensible default: untrusted worker (safe for any module).\nOptional name of the WIT function to call on module start.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoads a deployment template from a TOML file.\nLoads a deployment specification from a TOML file.\nAttempts to load a deployment template next to the given …\nLoads a complete component bundle from a directory\nMaximum fuel units\nRecommended worker group name (if using worker isolation)\nTarget worker group for this deployment\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRecommended isolation strategy\nOverride isolation mode\nMaximum memory in MB\nComponent ID to deploy (e.g., “http-logger@0.1.0”)\nOptional overrides for deployment template parameters\nNumber of replicas to run\nResource limits and requirements\nOverride resource requirements\nOptional name of the WIT function to call on graceful …\nLifecycle hook configuration\nOverride startup configuration\nTimeout in seconds for startup (0 = no timeout)\nRecommended trust level\nOverride trust level\nValidates template constraints.\nValidates deployment specification.\nValidates the entire bundle for consistency\nValidates compatibility between a component and its …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")