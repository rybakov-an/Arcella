searchState.loadedDescShard("arcella", 0, "Arcella: Modular WebAssembly Runtime\nCentralized error handling for Arcella.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGracefully shuts down the ALME server and waits for it to …\nStarts the ALME (Arcella Local Management Extensions) …\nCommands accepted by the ALME server.\nALME server response format.\nGracefully shuts down the ALME server and waits for it to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum allowed length of an incoming ALME request in …\nHandles a single ALME client connection for its entire …\nRuns the main accept loop for the ALME server.\nSerializes an <code>AlmeResponse</code> to JSON and writes it to the …\nSpawns the ALME (Arcella Local Management Extensions) …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nALME (IPC) communication error.\n<code>Result&lt;T, Error&gt;</code>\nThe root error type for all Arcella-specific failures.\nConfiguration loading or parsing error.\nContains the error value\nContains the error value\nFailed to determine or access the user’s home directory.\nInstance lifecycle error (e.g., start/stop on invalid …\nGeneral-purpose error for unexpected conditions.\nRequest is failed;\nI/O error (file not found, permission denied, etc.).\nIO error with associated path for better diagnostics\nTask join error.\nJSON serialization/deserialization error.\nInvalid or missing module manifest.\nModule with the given ID was not found in the runtime.\nContains the success value\nContains the success value\nConvenient alias for <code>Result&lt;T, ArcellaError&gt;</code>.\nRuntime error.\nSerialization error.\nWASM compilation or runtime error from Wasmtime.\nFailed to parse WebAssembly Text Format (<code>.wat</code>).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuffer for ALME log access (in-memory ring buffer)\nHelper: deserialize LevelFilter from string (e.g., “info…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoads and initializes the global tracing subscriber.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")