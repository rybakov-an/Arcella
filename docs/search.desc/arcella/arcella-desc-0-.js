searchState.loadedDescShard("arcella", 0, "Arcella: Modular WebAssembly Runtime\nCentralized error handling for Arcella.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLogging and tracing for the Arcella Runtime.\nCommand dispatching logic for the ALME (Arcella Local …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nALME (Arcella Local Management Extensions) Unix socket …\nGracefully shuts down the ALME server and waits for it to …\nStarts the ALME (Arcella Local Management Extensions) …\nDispatches an ALME command to the appropriate handler …\nHandles the <code>&quot;log:tail&quot;</code> ALME command.\nHandles the <code>&quot;module:list&quot;</code> ALME command.\nHandles the <code>&quot;ping&quot;</code> ALME command.\nHandles the <code>&quot;status&quot;</code> ALME command.\nALME server response format.\nOptional arguments for the command\nCommand name in hierarchical format, e.g., “log:tail”, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum allowed length of an incoming ALME request in …\nHandles a single ALME client connection for its entire …\nRuns the main accept loop for the ALME server.\nSerializes an <code>AlmeResponse</code> to JSON and writes it to the …\nSpawns the ALME (Arcella Local Management Extensions) …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nALME (IPC) communication error.\n<code>Result&lt;T, Error&gt;</code>\nThe root error type for all Arcella-specific failures.\nConfiguration loading or parsing error.\nContains the error value\nContains the error value\nFailed to determine or access the user’s home directory.\nInstance lifecycle error (e.g., start/stop on invalid …\nGeneral-purpose error for unexpected conditions.\nRequest is failed;\nI/O error (file not found, permission denied, etc.).\nIO error with associated path for better diagnostics\nTask join error.\nJSON serialization/deserialization error.\nInvalid or missing module manifest.\nModule with the given ID was not found in the runtime.\nContains the success value\nContains the success value\nConvenient alias for <code>Result&lt;T, ArcellaError&gt;</code>.\nRuntime error.\nSerialization error.\nWASM compilation or runtime error from Wasmtime.\nFailed to parse WebAssembly Text Format (<code>.wat</code>).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA tracing layer that writes events to an in-memory ring …\nIn-memory ring buffer storing the most recent log entries. …\nArcella tracing configuration.\nMaximum size of the in-memory ring buffer for ALME (in log …\nDefault log level for targets under the <code>arcella</code> namespace.\nHelper: deserialize LevelFilter from string (e.g., “info…\nHelper: deserialize a map of per-module log levels.\nWrite logs to the <code>arcella.log</code> file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns up to <code>n</code> most recent log entries from the in-memory …\nInitializes the global <code>tracing</code> subscriber based on the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads tracing configuration from a TOML file.\nPer-module/target log levels.\nOutput logs to stderr.\nUse structured (JSON) format for file logging.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")